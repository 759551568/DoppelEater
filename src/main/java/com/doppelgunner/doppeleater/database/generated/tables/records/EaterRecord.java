/*
 * This file is generated by jOOQ.
*/
package com.doppelgunner.doppeleater.database.generated.tables.records;


import com.doppelgunner.doppeleater.database.generated.tables.Eater;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EaterRecord extends UpdatableRecordImpl<EaterRecord> implements Record9<String, String, String, String, byte[], byte[], String, String, byte[]> {

    private static final long serialVersionUID = 1744142682;

    /**
     * Setter for <code>eater.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>eater.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>eater.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>eater.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>eater.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>eater.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>eater.bio</code>.
     */
    public void setBio(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>eater.bio</code>.
     */
    public String getBio() {
        return (String) get(3);
    }

    /**
     * Setter for <code>eater.privacy</code>.
     */
    public void setPrivacy(byte... value) {
        set(4, value);
    }

    /**
     * Getter for <code>eater.privacy</code>.
     */
    public byte[] getPrivacy() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>eater.gender</code>.
     */
    public void setGender(byte... value) {
        set(5, value);
    }

    /**
     * Getter for <code>eater.gender</code>.
     */
    public byte[] getGender() {
        return (byte[]) get(5);
    }

    /**
     * Setter for <code>eater.time_started</code>.
     */
    public void setTimeStarted(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>eater.time_started</code>.
     */
    public String getTimeStarted() {
        return (String) get(6);
    }

    /**
     * Setter for <code>eater.birthday</code>.
     */
    public void setBirthday(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>eater.birthday</code>.
     */
    public String getBirthday() {
        return (String) get(7);
    }

    /**
     * Setter for <code>eater.image</code>.
     */
    public void setImage(byte... value) {
        set(8, value);
    }

    /**
     * Getter for <code>eater.image</code>.
     */
    public byte[] getImage() {
        return (byte[]) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, String, String, byte[], byte[], String, String, byte[]> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<String, String, String, String, byte[], byte[], String, String, byte[]> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Eater.EATER.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Eater.EATER.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Eater.EATER.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Eater.EATER.BIO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field5() {
        return Eater.EATER.PRIVACY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field6() {
        return Eater.EATER.GENDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Eater.EATER.TIME_STARTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Eater.EATER.BIRTHDAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field9() {
        return Eater.EATER.IMAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getBio();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value5() {
        return getPrivacy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value6() {
        return getGender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getTimeStarted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value9() {
        return getImage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value1(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value2(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value3(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value4(String value) {
        setBio(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value5(byte... value) {
        setPrivacy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value6(byte... value) {
        setGender(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value7(String value) {
        setTimeStarted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value8(String value) {
        setBirthday(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord value9(byte... value) {
        setImage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EaterRecord values(String value1, String value2, String value3, String value4, byte[] value5, byte[] value6, String value7, String value8, byte[] value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EaterRecord
     */
    public EaterRecord() {
        super(Eater.EATER);
    }

    /**
     * Create a detached, initialised EaterRecord
     */
    public EaterRecord(String username, String email, String password, String bio, byte[] privacy, byte[] gender, String timeStarted, String birthday, byte[] image) {
        super(Eater.EATER);

        set(0, username);
        set(1, email);
        set(2, password);
        set(3, bio);
        set(4, privacy);
        set(5, gender);
        set(6, timeStarted);
        set(7, birthday);
        set(8, image);
    }
}
