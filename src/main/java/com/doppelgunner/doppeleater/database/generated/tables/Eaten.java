/*
 * This file is generated by jOOQ.
*/
package com.doppelgunner.doppeleater.database.generated.tables;


import com.doppelgunner.doppeleater.database.generated.DefaultSchema;
import com.doppelgunner.doppeleater.database.generated.Keys;
import com.doppelgunner.doppeleater.database.generated.tables.records.EatenRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Eaten extends TableImpl<EatenRecord> {

    private static final long serialVersionUID = -1517268088;

    /**
     * The reference instance of <code>eaten</code>
     */
    public static final Eaten EATEN = new Eaten();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EatenRecord> getRecordType() {
        return EatenRecord.class;
    }

    /**
     * The column <code>eaten.foodId</code>.
     */
    public final TableField<EatenRecord, Integer> FOODID = createField("foodId", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>eaten.meal</code>.
     */
    public final TableField<EatenRecord, Object> MEAL = createField("meal", org.jooq.impl.DefaultDataType.getDefaultDataType("bob"), this, "");

    /**
     * The column <code>eaten.foodTagList</code>.
     */
    public final TableField<EatenRecord, String> FOODTAGLIST = createField("foodTagList", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>eaten.howFast</code>.
     */
    public final TableField<EatenRecord, Integer> HOWFAST = createField("howFast", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>eaten.deliciousness</code>.
     */
    public final TableField<EatenRecord, Integer> DELICIOUSNESS = createField("deliciousness", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>eaten.username</code>.
     */
    public final TableField<EatenRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>eaten.dateEaten</code>.
     */
    public final TableField<EatenRecord, String> DATEEATEN = createField("dateEaten", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>eaten</code> table reference
     */
    public Eaten() {
        this("eaten", null);
    }

    /**
     * Create an aliased <code>eaten</code> table reference
     */
    public Eaten(String alias) {
        this(alias, EATEN);
    }

    private Eaten(String alias, Table<EatenRecord> aliased) {
        this(alias, aliased, null);
    }

    private Eaten(String alias, Table<EatenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EatenRecord> getPrimaryKey() {
        return Keys.PK_EATEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EatenRecord>> getKeys() {
        return Arrays.<UniqueKey<EatenRecord>>asList(Keys.PK_EATEN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Eaten as(String alias) {
        return new Eaten(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Eaten rename(String name) {
        return new Eaten(name, null);
    }
}
